[
  {
    "body": "Before starting the project, please install *Node.js* from [the official website](https://nodejs.org/en/) or make sure it is already installed on your computer. It is used for checking that you're on the right track in the project.\r\n\r\n## Description\r\n\r\nSo, let's start to create your portfolio. Note that we are not trying to collect or otherwise use any personal information about you and your career. Feel free to use random data in this project instead of your personal information!\r\n\r\nIn the first stage, you need to create a simple web page. It should have the following HTML elements: top-level heading, two second-level headings, at least one paragraph of text, and at least two images.\r\n\r\n## Objectives\r\n\r\n1. Come up with a header for your future site and wrap it in a proper tag for a first-level heading.\r\n2. Create a second-level heading with the text \"About me\".\r\n3. Place your photo or any image that will represent you.\r\n4. Put at least one paragraph of text on the site: this will be the personal biography section.\r\n5. Create another second-level heading with the text \"Portfolio\".\r\n6. Place at least one image that will represent your work experience and achievements.\r\n7. Put a title or a project name under each image so that they don't appear out of context.\r\n\r\n## Example\r\n\r\nHere is what your simple page is supposed to look like at the end of the stage implementation:\r\n\r\n![portfolio about me page](https://ucarecdn.com/d14fe13c-ce16-446c-b3b4-3a4b2cd5e5e2/-/crop/607x941/69,139/-/preview/)",
    "title": "Simple page"
  },
  {
    "body": "## Description\r\n\r\nYour website looks very basic: you already know that the elements of the site are usually divided into sections. Let's make your website more professional and user-friendly! In this stage, you will add a few new elements and regroup the existing ones. Using anchor links, you will also make navigating the web page more convenient for the users.\r\n\r\nBy following [this link](https://stepik.org/media/attachments/lesson/467516/images2.zip), you can download the images used in the web page from the example below.\r\n\r\n## Objectives\r\n\r\n1. Create a website header and place your `<h1>` element in it.\r\n2. Decide which elements you want to place in your biography block, group them with the `<section>` tag, and add the `about` id to this tag.\r\n3. Group the elements in the \"Portfolio\" section the same way. In this case, use the tag `<section>` and the id `portfolio`.\r\n4. Using the tag `<section>`, Ðüreate another section with the id `contacts` and place your contact information in it.\r\n5. Create a footer; you can put any information in the footer.\r\n6. Add a navigation bar with anchor links to blocks with the id's `about`, `portfolio`, and `contacts`. Make the navigation bar part of the site's header.\r\n\r\n## Example\r\n\r\nHere is an example of anchor links in the action:\r\n\r\n![portfolio page navigation](https://ucarecdn.com/ba0faeeb-8eb9-4ce5-8cb3-f09fc5179da5/)",
    "title": "Making a site"
  },
  {
    "body": "## Description\r\n\r\nA bare HTML page without styles doesn't look very presentable. There is just so much that can be done! For example, you can add a background, margins, and paddings, or change the color, size, or location of the elements. In this stage, you will transform the appearance of your site and make it visually impressive.\r\n\r\n\r\n\r\nDon't forget to connect the CSS file to HTML, otherwise, the properties will not apply.\r\n\r\n\r\n\r\nIf you'd like, you can try making the same site design as in the examples below. At [this link](https://stepik.org/media/attachments/lesson/467516/site.zip) you can find the images that were used to create this site.\r\n\r\n\r\n## Objectives\r\n\r\n1. Reset default margins and paddings so that all the elements are displayed with the same indentation in different browsers.\r\n2. Use CSS Grid or Flexbox to rearrange the elements of the web page as you like.\r\n3. Change the height of the header of your site.\r\n4. Change the background color of the site header or set a cool background image.\r\n5. Set the height and width of the images on your site.\r\n6. Change the height of the footer of your site.\r\n7. Change the background color of the site footer.\r\n8. Add styles to other elements: this is up to you! You can also create additional HTML elements if you wish.\r\n\r\n## Examples\r\n\r\n**Example 1:** *site header design*\r\n\r\n![portfolio main page header](https://ucarecdn.com/c85c4e56-c479-462f-8d5c-a07377026854/)\r\n\r\n**Example 2:** *designing the section \"About me\"*\r\n\r\n![portfolio about me page design](https://ucarecdn.com/ce11ee66-dce2-4751-af20-9d535bf4fe88/-/crop/1125x571/304,339/-/preview/)\r\n\r\n**Example 3:** *designing the section \"Portfolio\"*\r\n\r\n![portfolio project list design](https://ucarecdn.com/088fe1e1-9047-490c-8279-05e3810f1b45/-/crop/1920x613/0,0/-/preview/)\r\n\r\n**Example 4:** *designing the section \"Contacts\"*\r\n\r\n![portfolio contacts section](https://ucarecdn.com/14010cc4-bc02-47c4-843b-a100cd208cce/-/crop/1920x339/0,625/-/preview/)\r\n\r\n**Example 5:** *site footer design*\r\n\r\n![portfolio page footer design](https://ucarecdn.com/968d93df-0113-4bec-a2cd-bc9470fc2ced/-/crop/1920x173/0,969/-/preview/)",
    "title": "Adding styles"
  },
  {
    "body": "## Description\r\n\r\nScreenshots of your portfolio projects and their names probably do not convey the whole essence of your work. Let's create pop-ups with more detailed information about your projects and work experience. For example, you can specify what technologies you used to create each project, how exactly they were made, and where they can be found.\r\n\r\n## Objectives\r\n\r\n1. In front of each project/achievement, add a button that will trigger a pop-up window when pressed. Specify the `open-window` class for the buttons.\r\n2. In an HTML file, create a pop-up template. Add the `window` class to the tag in which your window will be wrapped.\r\n3. Write a script so that the pop-up window with the necessary information appears when the button is pressed.\r\n4. Complete your script so that the window can close.\r\n5. Write styles for your new elements.\r\n\r\n## Example\r\n\r\nHere is an example of a pop-up window:\r\n\r\n![portfolio project pop-up window](https://ucarecdn.com/ecc5a120-f686-4177-a526-a1ad3d49c72b/-/crop/778x379/600,623/-/preview/)",
    "title": "Pop-up windows"
  },
  {
    "body": "## Description\r\n\r\nFinally, let's focus on the responsiveness and cross-browser compatibility of your website.\r\n\r\nAt the moment, the navigation bar of your site is displayed okay on computers and laptops, but it does not look great on tablets and phones. Let's make a hamburger menu for those visitors who are using mobile devices. The **hamburger menu** refers to a type of menu that unfolds after clicking the button with three bars:\r\n\r\n![hamburger menu button](https://ucarecdn.com/8b15eddc-6ec1-4124-b85b-fa0ab31736af/-/crop/578x545/666,0/-/preview/)\r\n\r\nSuch appearance does remind you of a hamburger a little, right? You've probably seen menus of this type a hundred times before.\r\n\r\nDon't forget to test how your menu is displayed on devices with different screen sizes. At the same time, make sure that the menu and other elements of your site display well on different devices and browsers.\r\n\r\n## Objectives\r\n\r\n1. In the HTML file, create an element with an icon that will open the navigation menu when pressed on mobile devices.\r\n2. Use CSS to make this icon appear on your site when you view it on devices with smaller screen sizes. The `@media` rule and the `display` or `visibility` property will help you do this.\r\n3. Create the menu itself. Set the `hamburger` class to the tag that wraps the menu elements.\r\n4. Specify the properties for the menu so that it is located where you want it.\r\n5. Write a script so that when you click the menu icon, it opens and the icon appearance changes (see the examples).\r\n6. Complete your program so that the menu closes when you click the icon.\r\n7. Make sure that other elements of your site also display okay on different devices and in different browsers. If necessary, adjust your code.\r\n\r\n## Examples\r\n\r\n**Example 1:** *the menu adapts to the screen size*\r\n\r\n![flexible menu bar demo](https://ucarecdn.com/a0357510-264e-4125-ba61-b3615a4268b6/)\r\n\r\n**Example 2:** *hamburger menu*\r\n\r\n![hamburger menu button action](https://ucarecdn.com/e3e6d469-4e2e-4fcb-893d-9983b695ed33/)",
    "title": "Responsiveness and cross-browser compatibility"
  }
]
